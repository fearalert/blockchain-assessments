# @format

name: Verify Commit Signatures

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  verify_commit_signatures:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch full history
        run: git fetch --unshallow

      - name: Verify commit signatures for all new commits
        shell: bash
        run: |
          set -e
          # Determine the commit range.
          if [ -n "${{ github.event.pull_request.number }}" ]; then
            echo "Pull request detected. Checking commits in PR..."
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            COMMITS=$(git rev-list "${BASE_SHA}"..HEAD)
          else
            echo "Push detected. Checking new commits..."
            # Attempt to compare to the upstream branch.
            if git rev-parse --verify "@{u}" > /dev/null 2>&1; then
              COMMITS=$(git rev-list "@{u}"..HEAD)
            else
              # Fallback: only check the latest commit.
              COMMITS=$(git rev-parse HEAD)
            fi
          fi

          echo "Commits to check: $COMMITS"
          for commit in $COMMITS; do
            # %G? returns: G (good), B (bad), U (unknown), N (not signed), or E (error)
            status=$(git log -1 --format="%G?" "$commit")
            echo "Commit $commit signature status: $status"
            if [ "$status" != "G" ]; then
              echo "ERROR: Commit $commit is not signed or verified (status: $status)."
              exit 1
            fi
          done
